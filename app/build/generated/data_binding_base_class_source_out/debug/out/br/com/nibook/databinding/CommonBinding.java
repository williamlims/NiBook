// Generated by view binder compiler. Do not edit!
package br.com.nibook.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import br.com.nibook.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CommonBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText editTextBirthday;

  @NonNull
  public final EditText editTextEmail;

  @NonNull
  public final EditText editTextName;

  @NonNull
  public final EditText editTextPhone;

  @NonNull
  public final EditText editTextSurname;

  private CommonBinding(@NonNull LinearLayout rootView, @NonNull EditText editTextBirthday,
      @NonNull EditText editTextEmail, @NonNull EditText editTextName,
      @NonNull EditText editTextPhone, @NonNull EditText editTextSurname) {
    this.rootView = rootView;
    this.editTextBirthday = editTextBirthday;
    this.editTextEmail = editTextEmail;
    this.editTextName = editTextName;
    this.editTextPhone = editTextPhone;
    this.editTextSurname = editTextSurname;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CommonBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CommonBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.common, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CommonBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.editTextBirthday;
      EditText editTextBirthday = ViewBindings.findChildViewById(rootView, id);
      if (editTextBirthday == null) {
        break missingId;
      }

      id = R.id.editTextEmail;
      EditText editTextEmail = ViewBindings.findChildViewById(rootView, id);
      if (editTextEmail == null) {
        break missingId;
      }

      id = R.id.editTextName;
      EditText editTextName = ViewBindings.findChildViewById(rootView, id);
      if (editTextName == null) {
        break missingId;
      }

      id = R.id.editTextPhone;
      EditText editTextPhone = ViewBindings.findChildViewById(rootView, id);
      if (editTextPhone == null) {
        break missingId;
      }

      id = R.id.editTextSurname;
      EditText editTextSurname = ViewBindings.findChildViewById(rootView, id);
      if (editTextSurname == null) {
        break missingId;
      }

      return new CommonBinding((LinearLayout) rootView, editTextBirthday, editTextEmail,
          editTextName, editTextPhone, editTextSurname);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
